{"version":3,"sources":["add.svg","constants.js","TaskInput.js","Tasks.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","id","d","fill","add_SvgComponent","props","version","x","y","width","height","viewBox","style","enableBackground","xmlSpace","ENTER_KEY","__webpack_require__","p","MINUTE_IN_MILLISECONDS","TaskInput","_PureComponent","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","concat","state","taskText","listenForEnter","event","addNewTask","setState","handleInputChange","e","value","inherits","createClass","window","addEventListener","removeEventListener","className","type","placeholder","onChange","onClick","PureComponent","Tasks","activeTasks","completedTasks","saveTasksToLocalStorage","newActiveTasks","localStorage","setItem","JSON","stringify","newTask","moment","format","activationDate","name","toConsumableArray","completeTask","task","filteredActiveTasks","filterTasks","taskWithCompletionTime","completionTime","prevState","setTimeout","deleteCompletedTask","taskIdToDelete","taskToDelete","find","filteredCompletedTasks","activateTask","tasks","taskIdToFilter","filter","parse","getItem","_this2","_this$state","src_TaskInput_0","map","App","src_Tasks_0","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62efd295.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"Plus\"\n}, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M68.928,32.343H40.827V4.243C40.827,1.903,38.928,0,36.585,0s-4.242,1.903-4.242,4.242v28.101H4.242     C1.9,32.343,0,34.246,0,36.585c0,2.347,1.9,4.242,4.242,4.242h28.101v28.1c0,2.349,1.899,4.242,4.242,4.242     s4.242-1.896,4.242-4.242v-28.1h28.101c2.344,0,4.242-1.896,4.242-4.242C73.17,34.246,71.271,32.343,68.928,32.343z\",\n  fill: \"#63B8F2\"\n}))));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"18px\",\n    height: \"18px\",\n    viewBox: \"0 0 73.17 73.17\",\n    style: {\n      \"enableBackground\": \"new 0 0 73.17 73.17\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/add.d3964127.svg\";\nexport { SvgComponent as ReactComponent };","export const ENTER_KEY = \"Enter\";\nexport const MINUTE_IN_MILLISECONDS = 60000;\n","import React, { PureComponent } from 'react';\n\nimport { ReactComponent as PlusIcon } from './add.svg';\nimport './TaskInput.css';\nimport {ENTER_KEY} from \"./constants\";\n\nexport class TaskInput extends PureComponent {\n    state = {\n        taskText: ''\n    };\n\n    componentDidMount() {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('keyup', this.listenForEnter);\n        }\n    }\n\n    componentWillUnmount() {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('keyup', this.listenForEnter);\n        }\n    }\n\n    listenForEnter = (event) => {\n        if (event.key === ENTER_KEY && this.state.taskText) {\n            this.addNewTask();\n        }\n    };\n\n    addNewTask = () => {\n        this.props.addNewTask(this.state.taskText);\n        this.setState({taskText: ''});\n    };\n\n    handleInputChange = (e) => {\n        this.setState({taskText: e.target.value});\n    };\n\n    render() {\n        const {taskText} = this.state;\n        return (\n            <div className=\"taskInputWrapper\">\n                <PlusIcon className=\"plusSign\" />\n                <input\n                    type=\"text\"\n                    className=\"taskInput\"\n                    placeholder=\"Add new task\"\n                    value={taskText}\n                    onChange={this.handleInputChange}\n                />\n                <div className={`addBtn${taskText && ' active'}`} onClick={this.addNewTask}>\n                    Add\n                </div>\n                <div className=\"blueBottomBorder\" />\n            </div>\n        );\n    }\n}\n\nexport default TaskInput;\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\n\nimport TaskInput from './TaskInput';\nimport './Tasks.css';\nimport { MINUTE_IN_MILLISECONDS } from \"./constants\";\n\nexport class Tasks extends PureComponent {\n    state = {\n        activeTasks: [],\n        completedTasks: [],\n    };\n\n    componentDidMount() {\n        this.setState({activeTasks: JSON.parse(localStorage.getItem('activeTasks')) || []});\n    }\n\n    saveTasksToLocalStorage = (newActiveTasks) => {\n        localStorage.setItem('activeTasks', JSON.stringify(newActiveTasks));\n    };\n\n    addNewTask = (taskText) => {\n        const newTask = {\n            id: moment().format('x'), // unix timestamp in milliseconds (now)\n            activationDate: moment(), // date (now)\n            name: taskText\n        };\n        const newActiveTasks = [...this.state.activeTasks, newTask];\n        this.setState({activeTasks: newActiveTasks});\n        this.saveTasksToLocalStorage(newActiveTasks);\n    };\n\n    completeTask = (task) => () => {\n        const filteredActiveTasks = this.filterTasks(this.state.activeTasks, task.id);\n        const taskWithCompletionTime = Object.assign(task, {completionTime: moment().format('x')});\n        this.setState(prevState => ({\n            activeTasks: filteredActiveTasks,\n            completedTasks: [...prevState.completedTasks, taskWithCompletionTime]\n        }));\n        this.saveTasksToLocalStorage(filteredActiveTasks);\n        setTimeout(this.deleteCompletedTask(task.id), MINUTE_IN_MILLISECONDS);\n    };\n\n    deleteCompletedTask = (taskIdToDelete) => () => {\n        const {completedTasks} = this.state;\n        const taskToDelete = completedTasks.find(task => task.id === taskIdToDelete);\n        if (taskToDelete) {\n            const timePassedSinceCompletion = moment().format('x') - taskToDelete.completionTime;\n            if (timePassedSinceCompletion >= MINUTE_IN_MILLISECONDS) {\n                const filteredCompletedTasks = this.filterTasks(completedTasks, taskIdToDelete);\n                this.setState({completedTasks: filteredCompletedTasks});\n            }\n        }\n    };\n\n    activateTask = (task) => () => {\n        const filteredCompletedTasks = this.filterTasks(this.state.completedTasks, task.id);\n        const newActiveTasks = [...this.state.activeTasks, task];\n        this.setState({\n            activeTasks: newActiveTasks,\n            completedTasks: filteredCompletedTasks\n        });\n        this.saveTasksToLocalStorage(newActiveTasks);\n    };\n\n    filterTasks = (tasks, taskIdToFilter) => {\n        return tasks.filter(task => task.id !== taskIdToFilter);\n    };\n\n    render() {\n        const {taskText, activeTasks, completedTasks} = this.state;\n        return (\n            <div className=\"panelWrapper\">\n                <h1 className=\"panelTitle\">Tasks</h1>\n                <TaskInput taskText={taskText} addNewTask={this.addNewTask} handleInputChange={this.handleInputChange} />\n                <div className=\"activeTasksWrapper\">\n                    {activeTasks.map((task) => {\n                        const activationDate = moment(task.activationDate).format('MMM D, YYYY');\n                        return <div key={task.id} className=\"taskListItem\" onClick={this.completeTask(task)}>\n                            <div className=\"taskText\"><span>{task.name}</span></div>\n                            <div className=\"activationDate\">{activationDate}</div>\n                        </div>;\n                    })}\n                </div>\n                <div className=\"completedTasksWrapper\">\n                    {completedTasks.map((task) =>\n                        <div key={task.id} className=\"taskListItem completed\" onClick={this.activateTask(task)}>\n                            <div className=\"taskText\"><span>{task.name}</span></div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tasks;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Tasks from './Tasks';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"appWrapper\">\n                    <h1 className=\"appTitle\">To do list</h1>\n                    <Tasks />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}