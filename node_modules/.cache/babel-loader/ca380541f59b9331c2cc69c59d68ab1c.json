{"ast":null,"code":"import _classCallCheck from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gusena/Projects/FrontendTest/to-do-list/src/Tasks.js\";\nimport React, { Component } from 'react';\nimport moment from \"moment/moment\";\nexport var Tasks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tasks, _Component);\n\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tasks).apply(this, arguments));\n  }\n\n  _createClass(Tasks, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.newTasks.length !== this.props.newTasks.length || nextProps.completedTasks.length !== this.props.completedTasks.length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          newTasks = _this$props.newTasks,\n          completedTasks = _this$props.completedTasks,\n          toggleTask = _this$props.toggleTask;\n      console.log(newTasks, completedTasks);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"newTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, newTasks.map(function (task, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"taskListItem\",\n          onClick: toggleTask(true, task, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, task.name);\n      })), React.createElement(\"div\", {\n        className: \"completedTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, completedTasks.map(function (task, i) {\n        var date = moment(task.date).format('MMM D, YYYY');\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"taskListItem completed\",\n          onClick: toggleTask(false, task, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, task.name), React.createElement(\"div\", {\n          className: \"completedDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, date));\n      })));\n    }\n  }]);\n\n  return Tasks;\n}(Component);\nexport default Tasks;","map":{"version":3,"sources":["/Users/gusena/Projects/FrontendTest/to-do-list/src/Tasks.js"],"names":["React","Component","moment","Tasks","nextProps","newTasks","length","props","completedTasks","toggleTask","console","log","map","task","i","name","date","format"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAC0BC,SAD1B,EACqC;AAC7B,aAAOA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,KAA8B,KAAKC,KAAL,CAAWF,QAAX,CAAoBC,MAAlD,IACHF,SAAS,CAACI,cAAV,CAAyBF,MAAzB,KAAoC,KAAKC,KAAL,CAAWC,cAAX,CAA0BF,MADlE;AAEH;AAJL;AAAA;AAAA,6BAMa;AAAA,wBAC0C,KAAKC,KAD/C;AAAA,UACEF,QADF,eACEA,QADF;AAAA,UACYG,cADZ,eACYA,cADZ;AAAA,UAC4BC,UAD5B,eAC4BA,UAD5B;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAsBG,cAAtB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCH,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,eACV;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAsC,UAAA,OAAO,EAAEL,UAAU,CAAC,IAAD,EAAOI,IAAP,EAAaC,CAAb,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IAAI,CAACE,IADV,CADU;AAAA,OAAb,CADD,CADJ,EAaI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,cAAc,CAACI,GAAf,CAAmB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC7B,YAAME,IAAI,GAAGd,MAAM,CAACW,IAAI,CAACG,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,aAAzB,CAAb;AACA,eAAO;AAAK,UAAA,GAAG,EAAEH,CAAV;AAAa,UAAA,SAAS,EAAC,wBAAvB;AAAgD,UAAA,OAAO,EAAEL,UAAU,CAAC,KAAD,EAAQI,IAAR,EAAcC,CAAd,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,IAAI,CAACE,IAAZ,CADG,EAEH;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCC,IAAhC,CAFG,CAAP;AAIH,OANA,CADL,CAbJ,CADJ;AAyBH;AAlCL;;AAAA;AAAA,EAA2Bf,SAA3B;AAqCA,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from \"moment/moment\";\n\nexport class Tasks extends Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.newTasks.length !== this.props.newTasks.length ||\n            nextProps.completedTasks.length !== this.props.completedTasks.length;\n    }\n\n    render() {\n        const {newTasks, completedTasks, toggleTask} = this.props;\n        console.log(newTasks, completedTasks);\n        return (\n            <div>\n                <div className=\"newTasksWrapper\">\n                {newTasks.map((task, i) =>\n                    <div key={i} className=\"taskListItem\" onClick={toggleTask(true, task, i)}>\n                        {task.name}\n                    </div>\n                )}\n\n                {/*<label className=\"taskListItem\">BlaBla*/}\n                {/*<input type=\"checkbox\" className=\"checkbox\" onClick={this.toggleTask} />*/}\n                {/*<span className=\"checkmark\" />*/}\n                {/*</label>*/}\n            </div>\n                <div className=\"completedTasksWrapper\">\n                    {completedTasks.map((task, i) => {\n                        const date = moment(task.date).format('MMM D, YYYY');\n                        return <div key={i} className=\"taskListItem completed\" onClick={toggleTask(false, task, i)}>\n                            <span>{task.name}</span>\n                            <div className=\"completedDate\">{date}</div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}