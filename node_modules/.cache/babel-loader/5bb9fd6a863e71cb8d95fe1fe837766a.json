{"ast":null,"code":"import _classCallCheck from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gusena/Projects/FrontendTest/to-do-list/src/TaskInput.js\";\nimport React, { PureComponent } from 'react';\nimport { ReactComponent as PlusIcon } from \"@svgr/webpack?-prettier,-svgo!./add.svg\";\nimport './Tasks.css';\nimport moment from \"moment/moment\";\nexport var TaskInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TaskInput, _PureComponent);\n\n  function TaskInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskText: ''\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        taskText: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof window !== 'undefined') {\n        window.addEventListener('keyup', this.listenForEnter);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('keyup', this.listenForEnter);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var taskText = this.state.taskText;\n      return React.createElement(\"div\", {\n        className: \"taskInputWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(PlusIcon, {\n        className: \"plusSign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"taskInput\",\n        placeholder: \"Add new task\",\n        value: taskText,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"addBtn\".concat(taskText && ' active'),\n        onClick: this.addNewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"div\", {\n        className: \"blueBottomBorder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TaskInput;\n}(PureComponent);\nexport default TaskInput;","map":{"version":3,"sources":["/Users/gusena/Projects/FrontendTest/to-do-list/src/TaskInput.js"],"names":["React","PureComponent","moment","TaskInput","state","taskText","handleInputChange","e","setState","target","value","window","addEventListener","listenForEnter","removeEventListener","addNewTask"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAGA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,QAAQ,EAAE;AADN,KADZ;;AAAA,UAiBIC,iBAjBJ,GAiBwB,UAACC,CAAD,EAAO;AACvB,YAAKC,QAAL,CAAc;AAACH,QAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACH,KAnBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKwB;AAChB,UAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,QAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKC,cAAtC;AACH;AACJ;AATL;AAAA;AAAA,2CAW2B;AACnB,UAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,QAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoC,KAAKD,cAAzC;AACH;AACJ;AAfL;AAAA;AAAA,6BAqBa;AAAA,UACER,QADF,GACc,KAAKD,KADnB,CACEC,QADF;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAEA,QAJX;AAKI,QAAA,QAAQ,EAAE,KAAKC,iBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI;AAAK,QAAA,SAAS,kBAAWD,QAAQ,IAAI,SAAvB,CAAd;AAAkD,QAAA,OAAO,EAAE,KAAKU,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,EAYI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAgBH;AAvCL;;AAAA;AAAA,EAA+Bd,aAA/B;AA0CA,eAAeE,SAAf","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { ReactComponent as PlusIcon } from './add.svg';\nimport './Tasks.css';\nimport moment from \"moment/moment\";\n\nexport class TaskInput extends PureComponent {\n    state = {\n        taskText: ''\n    };\n\n    componentDidMount() {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('keyup', this.listenForEnter);\n        }\n    }\n\n    componentWillUnmount() {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('keyup', this.listenForEnter);\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({taskText: e.target.value});\n    };\n\n    render() {\n        const {taskText} = this.state;\n        return (\n            <div className=\"taskInputWrapper\">\n                <PlusIcon className=\"plusSign\" />\n                <input\n                    type=\"text\"\n                    className=\"taskInput\"\n                    placeholder=\"Add new task\"\n                    value={taskText}\n                    onChange={this.handleInputChange}\n                />\n                <div className={`addBtn${taskText && ' active'}`} onClick={this.addNewTask}>\n                    Add\n                </div>\n                <div className=\"blueBottomBorder\" />\n            </div>\n        );\n    }\n}\n\nexport default TaskInput;\n"]},"metadata":{},"sourceType":"module"}