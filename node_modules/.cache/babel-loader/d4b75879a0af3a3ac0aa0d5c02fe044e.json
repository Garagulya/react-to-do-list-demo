{"ast":null,"code":"import _classCallCheck from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gusena/Projects/FrontendTest/to-do-list/src/App.js\";\nimport React, { Component } from 'react'; // import moment from 'moment';\n\nimport { ReactComponent as PlusIcon } from \"@svgr/webpack?-prettier,-svgo!./add.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskText: '',\n      tasks: localStorage.getItem('tasks')\n    };\n\n    _this.addNewTask = function () {\n      var taskText = _this.state.taskText;\n\n      _this.setState({\n        taskText: ''\n      });\n    };\n\n    _this.changeTaskText = function (e) {\n      _this.setState({\n        taskText: e.target.value\n      });\n    };\n\n    _this.toggleTask = function () {};\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var taskText = this.state.taskText;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"appWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"appTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Task Manager\"), React.createElement(\"div\", {\n        className: \"panelWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"panelTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Work\"), React.createElement(\"div\", {\n        className: \"taskInputWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(PlusIcon, {\n        className: \"plusSign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"taskInput\",\n        placeholder: \"Add new task\",\n        value: taskText,\n        onChange: this.changeTaskText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"addBtn\".concat(taskText && ' active'),\n        onClick: this.addNewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"div\", {\n        className: \"newTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"taskListItem\",\n        onClick: this.toggleTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"BlaBla\")), React.createElement(\"div\", {\n        className: \"completedTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"taskListItem completed\",\n        onClick: this.toggleTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"BlaBla\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/gusena/Projects/FrontendTest/to-do-list/src/App.js"],"names":["React","Component","App","state","taskText","tasks","localStorage","getItem","addNewTask","setState","changeTaskText","e","target","value","toggleTask"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFH,K;;UAKRC,U,GAAa,YAAM;AAAA,UACRJ,QADQ,GACI,MAAKD,KADT,CACRC,QADQ;;AAEf,YAAKK,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH,K;;UAEDM,c,GAAiB,UAACC,CAAD,EAAO;AACpB,YAAKF,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAEO,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd;AACH,K;;UAEDC,U,GAAa,YAAM,CAElB,C;;;;;;;6BAEQ;AAAA,UACEV,QADF,GACc,KAAKD,KADnB,CACEC,QADF;AAEL,aACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAEA,QAJX;AAKI,QAAA,QAAQ,EAAE,KAAKM,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASI;AAAK,QAAA,SAAS,kBAAWN,QAAQ,IAAI,SAAvB,CAAd;AAAkD,QAAA,OAAO,EAAE,KAAKI,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CAFJ,EAeI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,OAAO,EAAE,KAAKM,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAfJ,EAsBI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,OAAO,EAAE,KAAKA,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlE,CADJ,CAtBJ,CAFJ,CADJ,CADA;AAiCH;;;;EAtDeb,S;;AAyDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import moment from 'moment';\nimport { ReactComponent as PlusIcon } from './add.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n      taskText: '',\n      tasks: localStorage.getItem('tasks')\n  };\n\n  addNewTask = () => {\n      const {taskText} = this.state;\n      this.setState({taskText: ''});\n  };\n\n  changeTaskText = (e) => {\n      this.setState({taskText: e.target.value});\n  };\n\n  toggleTask = () => {\n\n  };\n\n  render() {\n      const {taskText} = this.state;\n      return (\n      <div className=\"app\">\n          <div className=\"appWrapper\">\n            <h1 className=\"appTitle\">Task Manager</h1>\n              <div className=\"panelWrapper\">\n                  <h1 className=\"panelTitle\">Work</h1>\n                  <div className=\"taskInputWrapper\">\n                      <PlusIcon className=\"plusSign\" />\n                      <input\n                          type=\"text\"\n                          className=\"taskInput\"\n                          placeholder=\"Add new task\"\n                          value={taskText}\n                          onChange={this.changeTaskText}\n                      />\n                      <div className={`addBtn${taskText && ' active'}`} onClick={this.addNewTask}>Add\n                          {/*<div className=\"blueBottomBorder\" />*/}\n                      </div>\n                  </div>\n                  <div className=\"newTasksWrapper\">\n                      <div className=\"taskListItem\" onClick={this.toggleTask}>BlaBla</div>\n                      {/*<label className=\"taskListItem\">BlaBla*/}\n                          {/*<input type=\"checkbox\" className=\"checkbox\" onClick={this.toggleTask} />*/}\n                          {/*<span className=\"checkmark\" />*/}\n                      {/*</label>*/}\n                  </div>\n                  <div className=\"completedTasksWrapper\">\n                      <div className=\"taskListItem completed\" onClick={this.toggleTask}><span>BlaBla</span></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}