{"ast":null,"code":"import _classCallCheck from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gusena/Projects/FrontendTest/to-do-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gusena/Projects/FrontendTest/to-do-list/src/Tasks.js\";\nimport React, { PureComponent } from 'react';\nimport moment from \"moment/moment\";\n\nvar Task =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Task, _PureComponent);\n\n  function Task() {\n    _classCallCheck(this, Task);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Task).apply(this, arguments));\n  }\n\n  _createClass(Task, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          task = _this$props.task,\n          toggleTask = _this$props.toggleTask;\n      return React.createElement(\"div\", {\n        key: task.id,\n        className: \"taskListItem\",\n        onClick: toggleTask(true, task),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, task.name);\n    }\n  }]);\n\n  return Task;\n}(PureComponent);\n\nexport var Tasks =\n/*#__PURE__*/\nfunction (_PureComponent2) {\n  _inherits(Tasks, _PureComponent2);\n\n  function Tasks() {\n    _classCallCheck(this, Tasks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tasks).apply(this, arguments));\n  }\n\n  _createClass(Tasks, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          newTasks = _this$props2.newTasks,\n          completedTasks = _this$props2.completedTasks,\n          toggleTask = _this$props2.toggleTask;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"newTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, newTasks.map(function (task) {\n        return React.createElement(Task, {\n          key: i,\n          task: task,\n          toggleTask: toggleTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"completedTasksWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, completedTasks.map(function (task) {\n        var date = moment(task.date).format('MMM D, YYYY');\n        return React.createElement(\"div\", {\n          key: task.id,\n          className: \"taskListItem completed\",\n          onClick: toggleTask(false, task),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, task.name), React.createElement(\"div\", {\n          className: \"completedDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, date));\n      })));\n    }\n  }]);\n\n  return Tasks;\n}(PureComponent);\nexport default Tasks;","map":{"version":3,"sources":["/Users/gusena/Projects/FrontendTest/to-do-list/src/Tasks.js"],"names":["React","PureComponent","moment","Task","props","task","toggleTask","id","name","Tasks","newTasks","completedTasks","map","i","date","format"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;IAEMC,I;;;;;;;;;;;;;6BACO;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,UADR,eACQA,UADR;AAEL,aACI;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE,EAAf;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,OAAO,EAAED,UAAU,CAAC,IAAD,EAAOD,IAAP,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACG,IADV,CADJ;AAKH;;;;EARcP,a;;AAWnB,WAAaQ,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,yBAC0C,KAAKL,KAD/C;AAAA,UACEM,QADF,gBACEA,QADF;AAAA,UACYC,cADZ,gBACYA,cADZ;AAAA,UAC4BL,UAD5B,gBAC4BA,UAD5B;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCI,QAAQ,CAACE,GAAT,CAAa,UAACP,IAAD;AAAA,eACV,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEQ,CAAX;AAAc,UAAA,IAAI,EAAER,IAApB;AAA0B,UAAA,UAAU,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA,OAAb,CADD,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,cAAc,CAACC,GAAf,CAAmB,UAACP,IAAD,EAAU;AAC1B,YAAMS,IAAI,GAAGZ,MAAM,CAACG,IAAI,CAACS,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,aAAzB,CAAb;AACA,eAAO;AAAK,UAAA,GAAG,EAAEV,IAAI,CAACE,EAAf;AAAmB,UAAA,SAAS,EAAC,wBAA7B;AAAsD,UAAA,OAAO,EAAED,UAAU,CAAC,KAAD,EAAQD,IAAR,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACG,IAAZ,CADG,EAEH;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCM,IAAhC,CAFG,CAAP;AAIH,OANA,CADL,CAXJ,CADJ;AAuBH;AA1BL;;AAAA;AAAA,EAA2Bb,aAA3B;AA6BA,eAAeQ,KAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport moment from \"moment/moment\";\n\nclass Task extends PureComponent {\n    render() {\n        const {task, toggleTask} = this.props;\n        return (\n            <div key={task.id} className=\"taskListItem\" onClick={toggleTask(true, task)}>\n                {task.name}\n            </div>\n        )\n    }\n}\n\nexport class Tasks extends PureComponent {\n    render() {\n        const {newTasks, completedTasks, toggleTask} = this.props;\n        return (\n            <div>\n                <div className=\"newTasksWrapper\">\n                {newTasks.map((task) =>\n                    <Task key={i} task={task} toggleTask={toggleTask} />\n                )}\n\n                {/*<label className=\"taskListItem\">BlaBla*/}\n                {/*<input type=\"checkbox\" className=\"checkbox\" onClick={this.toggleTask} />*/}\n                {/*<span className=\"checkmark\" />*/}\n                {/*</label>*/}\n            </div>\n                <div className=\"completedTasksWrapper\">\n                    {completedTasks.map((task) => {\n                        const date = moment(task.date).format('MMM D, YYYY');\n                        return <div key={task.id} className=\"taskListItem completed\" onClick={toggleTask(false, task)}>\n                            <span>{task.name}</span>\n                            <div className=\"completedDate\">{date}</div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}